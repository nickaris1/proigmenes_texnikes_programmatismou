# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: 
      - main
      - release
      - test_auto_release
    
  pull_request:
    branches:
      - main
      - release
      - test_auto_release

jobs:
  build_and_test:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'adopt'
        cache: maven

    - name: Build and test project with Maven
      run: mvn -B package --file pom.xml
      
  publish-job:
    runs-on: ubuntu-latest
    needs: [build_and_test]
    if: github.ref == 'refs/heads/release' || github.ref == 'refs/heads/test_auto_release'
    steps:
    - name: deploy
      uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

#    - run: mvn --batch-mode --update-snapshots verify
#    - run: mkdir staging && cp "target"/*jar-with-dependencies.jar staging
    - run: mvn -B package --file pom.xml -DskipTests
    - name: Automatic Releases
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        # GitHub secret token
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        # Git tag (for automatic releases)
        automatic_release_tag: ${{ github.run_number }} # optional

        # Should this release be marked as a pre-release?
        prerelease: true # optional, default is true
        # Release title (for automatic releases)
        title: Release ${{ github.run_number }} # optional
        # Assets to upload to the release
        files: target/*jar-with-dependencies.jar # optional

#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#       with:
#         tag_name: ${{ github.ref }}
#         release_name: Release ${{ github.ref }}
#         body: |
#           Changes in this Release
#           - First Change
#           - Second Change
#         draft: false
#         prerelease: true
   
#     - name: Upload Release Asset
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: target/*jar-with-dependencies.jar
#         asset_name: akinita-v${{ github.run_number }}.jar
#         asset_content_type: application/jar

